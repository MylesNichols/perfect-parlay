<<<<<<< HEAD
[{"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\index.js":"1","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\App.js":"2","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Home.js":"4","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Signup.js":"5","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Contact.js":"6","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Login.js":"7","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Profile.js":"8","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Sports.js":"9","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\components\\Navbar.js":"10","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\utils\\auth.js":"11","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\utils\\mutations.js":"12"},{"size":437,"mtime":1679956645931,"results":"13","hashOfConfig":"14"},{"size":1607,"mtime":1679956645927,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1679956645937,"results":"16","hashOfConfig":"14"},{"size":698,"mtime":1679956645932,"results":"17","hashOfConfig":"14"},{"size":2783,"mtime":1679956645935,"results":"18","hashOfConfig":"14"},{"size":1964,"mtime":1679956645932,"results":"19","hashOfConfig":"14"},{"size":2712,"mtime":1679956645933,"results":"20","hashOfConfig":"14"},{"size":4052,"mtime":1679956645933,"results":"21","hashOfConfig":"14"},{"size":15135,"mtime":1679956645936,"results":"22","hashOfConfig":"14"},{"size":628,"mtime":1679956645929,"results":"23","hashOfConfig":"14"},{"size":789,"mtime":1679956645938,"results":"24","hashOfConfig":"14"},{"size":1540,"mtime":1679956645939,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e0oksd",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\index.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\App.js",["65"],[],"import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, InMemoryCache, createHttpLink, ApolloProvider } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Contact from './pages/Contact';\r\nimport Navbar from './components/Navbar';\r\nimport Profile from './pages/Profile';\r\nimport Sports from './pages/Sports';\r\n// import PredictorPicker from './pages/PredictorPicker';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:3001/graphql',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <>\r\n      <Navbar />\r\n          <Routes>\r\n              <Route exact path='/' element={<Home />} />\r\n              <Route path='/signup' element={<Signup />} />\r\n              <Route path='/login' element={<Login />} />\r\n              <Route path='/contact' element={<Contact />} />\r\n              <Route path='/profile' element={<Profile />} />\r\n              <Route path='/sports' element={<Sports />} />\r\n          </Routes>\r\n      </>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Home.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Signup.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Contact.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Login.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Profile.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\pages\\Sports.js",["66","67","68"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SportsBetting = () => {\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const sportsAPIKey = \"8b80cb19e317c4b97ba6b368e1d88304\";\r\n  const navigate = useNavigate();\r\n  const [sportsLeagues, setSportsLeagues] = useState([\r\n    {\r\n      name: \"Select a League and select a type of bet to see the odds and scores!\",\r\n      id: \"sample choice\",\r\n      value: \"sample choice\",\r\n    },\r\n    {\r\n      name: \"American Football (NFL)\",\r\n      id: \"americanfootball_nfl\",\r\n      value: \"americanfootball_nfl\",\r\n    },\r\n    \r\n    {\r\n      name: 'Select a League and select a type of bet to see the odds and scores!',\r\n      id: 'sample choice',\r\n      value: 'sample choice'\r\n    },\r\n    {\r\n      name: 'American Football (NFL)',\r\n      id: 'americanfootball_nfl',\r\n      value: 'americanfootball_nfl'\r\n    },\r\n    {\r\n      name: 'American Football (NCAA)',\r\n      id: 'americanfootball_ncaaf',\r\n      value: 'americanfootball_ncaaf'\r\n    },\r\n    {\r\n      name: 'Aussie Rules Football (AFL)',\r\n      id: 'aussierules_afl',\r\n      value: 'aussierules_afl'\r\n    },\r\n    {\r\n      name: 'Baseball (MLB)',\r\n      id: 'baseball_mlb',\r\n      value: 'baseball_mlb'\r\n    },\r\n    {\r\n      name: 'Basketball (NBA)',\r\n      id: 'basketball_nba',\r\n      value: 'basketball_nba'\r\n    },\r\n    {\r\n      name: 'National Hockey League (NHL)',\r\n      id: 'icehockey_nhl',\r\n      value: 'icehockey_nhl'\r\n    },\r\n    {\r\n      name: 'Mixed Martial Arts (MMA)',\r\n      id: 'mma_mixed_martial_arts',\r\n      value: 'mma_mixed_martial_arts'\r\n    },\r\n    {\r\n      name: 'Soccer (Premier League)',\r\n      id: 'soccer_epl',\r\n      value: 'soccer_epl'\r\n    },\r\n    {\r\n      name: 'Soccer (La Liga)',\r\n      id: 'soccer_spain_la_liga',\r\n      value: 'soccer_spain_la_liga'\r\n    },\r\n    {\r\n      name: 'Soccer (MLS)',\r\n      id: 'soccer_usa_mls',\r\n      value: 'soccer_usa_mls'\r\n    },\r\n    {\r\n      name: 'Soccer (UEFA Champions League)',\r\n      id: 'soccer_uefa_champs_league',\r\n      value: 'soccer_uefa_champs_league'\r\n    }\r\n  ]);\r\n\r\n  const handleBetSelectorChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedValue(selectedValue);\r\n    console.log(selectedValue);\r\n    if (selectedValue === \"Sports\") {\r\n      console.log(\"sports chosen\");\r\n      nbaScoresInfoBoard();\r\n      displaySportsBetCard();\r\n    } else if (selectedValue === \"Finance\") {\r\n      console.log(\"finance chosen\");\r\n      const profileButton = document.createElement(\"button\");\r\n      profileButton.textContent = \"Go to Finance Profile\";\r\n      profileButton.classList.add(\"profileButton\");\r\n      profileButton.addEventListener(\"click\", () => {\r\n        navigate(\"/profile\");\r\n      });\r\n      const betCard = document.querySelector(\"#predictorCard\");\r\n      betCard.innerHTML = \"\";\r\n      betCard.appendChild(profileButton);\r\n    }\r\n  };\r\n  \r\n\r\n  const nbaScoresInfoBoard = () => {\r\n    const nbascoresURL = `https://api.the-odds-api.com/v4/sports/basketball_nba/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\r\n\r\n    fetch(nbascoresURL)\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    console.log(data);\r\n    const sampleScores = data;\r\n    console.log(sampleScores);\r\n    starterSportsDisplay(sampleScores);\r\n    return sampleScores;\r\n  })\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n  };\r\n\r\n  const starterSportsDisplay = (sampleScores) => {\r\n    let scoresContainer = document.querySelector(\"#infoBoard\");\r\n    if (!sampleScores || sampleScores.length === 0) {\r\n      scoresContainer.textContent = \"No scores found.\";\r\n      return;\r\n    }\r\n    for (let i = 0; i < sampleScores.length; i++) {\r\n      let pastScore = document.createElement(\"div\");\r\n      pastScore.classList.add(\"card-item\");\r\n      let scores = document.createElement(\"p\");\r\n      scores.textContent = `${sampleScores[i].scores[0].name}: ${sampleScores[i].scores[0].score}, ${sampleScores[i].scores[1].name}: ${sampleScores[i].scores[1].score}`;\r\n      let teamsBanner = document.createElement(\"h3\");\r\n      teamsBanner.textContent = `${sampleScores[i].home_team} vs. ${sampleScores[i].away_team}`;\r\n  \r\n      pastScore.appendChild(teamsBanner);\r\n      pastScore.appendChild(scores);\r\n      scoresContainer.append(pastScore);\r\n    }\r\n  };\r\n\r\n\r\n  //Displays card to choose sport to bet on/if they want a rgular or custom bet\r\n  const displaySportsBetCard = () => {\r\n    const betCard = document.querySelector('#predictorCard'); \r\n    betCard.innerHTML = '';\r\n\r\n    // Create a label for the date input\r\n    const label = document.createElement('label');\r\n    label.textContent = 'Choose a date: ';\r\n    // Created a date input\r\n    const datePicker = document.createElement('input');\r\n    datePicker.setAttribute('type', 'date');\r\n    datePicker.setAttribute('id', 'date-picker');\r\n    datePicker.setAttribute('value', '2021-01-01');\r\n    // Created dropdown for the sports(Leagues)\r\n    let sportsSelector = document.createElement('select');\r\n    sportsSelector.setAttribute('id', 'sportselector');\r\n    sportsSelector.addEventListener('change', () => {\r\n      const selectedValue = sportsSelector.value;\r\n      console.log('Selected league value:', selectedValue);\r\n      updatedapiInfo(selectedValue);\r\n    });\r\n    // Created a button for the custom bets\r\n    let customBetButton = document.createElement('button');\r\n    customBetButton.textContent = 'Create Custom Bet';\r\n    customBetButton.classList.add('customBetButton');\r\n    customBetButton.addEventListener('click', () => {\r\n      displayCustomSportsBet();\r\n      console.log('custom bet button clicked')\r\n    });\r\n    // Created a button for the current odds\r\n    let currentOddsButton = document.createElement('button');\r\n    currentOddsButton.textContent = 'Current Odds';\r\n    currentOddsButton.classList.add('currentOddsButton');\r\n    currentOddsButton.addEventListener('click', getCurrentSportsOdds);\r\n  \r\n    // Created the options for the sports(Leagues)\r\n    sportsSelector.setAttribute('id', 'sportselector');\r\n    for (var i = 0; i < sportsLeagues.length; i++) { \r\n      let sportsOption = document.createElement('option');\r\n      sportsOption.setAttribute('value', sportsLeagues[i].id);\r\n      sportsOption.textContent = sportsLeagues[i].name;\r\n      sportsSelector.appendChild(sportsOption);\r\n      betCard.appendChild(sportsSelector);\r\n    }\r\n    betCard.appendChild(label);\r\n    betCard.appendChild(datePicker);\r\n    betCard.appendChild(customBetButton);\r\n    betCard.appendChild(currentOddsButton);\r\n    betCard.appendChild(sportsSelector);\r\n  }\r\n\r\n  //pulls info for updated scores for the selected sport\r\n  const updatedapiInfo = (selectedValue) => {\r\n    var updatedSport = selectedValue;\r\n    console.log(updatedSport);\r\n    if (updatedSport === 'sample choice') {\r\n      console.log('no sport chosen');\r\n    } else {\r\n      console.log(updatedSport + ' chosen');\r\n      var newscoresURL = `https://api.the-odds-api.com/v4/sports/${updatedSport}/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\r\n      fetch(newscoresURL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          var updatedScores = data;\r\n          console.log(updatedScores);\r\n          updatedOddsDisplay(updatedScores);\r\n          getCurrentSportsOdds(updatedScores);\r\n        });\r\n    }\r\n  }\r\n\r\n  //Displays updated scores for the selected sport\r\n  const updatedOddsDisplay = (updatedScores) => {\r\n    let updatedScoresContainer = document.querySelector('#infoBoard');\r\n    updatedScoresContainer.innerHTML = '';\r\n  \r\n    for (var i = 0; i < updatedScores.length; i++) {\r\n      let updatedScore = document.createElement('div');\r\n      updatedScore.classList.add('card-item');\r\n      let newScores = document.createElement('p');\r\n      newScores.textContent = `${updatedScores[i].scores[0].name}: ${updatedScores[i].scores[0].score}, ${updatedScores[i].scores[1].name}: ${updatedScores[i].scores[1].score}`;\r\n      let updatedTeamsBanner = document.createElement('h3');\r\n      updatedTeamsBanner.textContent = `${updatedScores[i].home_team} vs. ${updatedScores[i].away_team}`;\r\n\r\n      updatedScore.appendChild(updatedTeamsBanner);\r\n      updatedScore.appendChild(newScores);\r\n      updatedScoresContainer.append(updatedScore);\r\n    }\r\n  }\r\n  \r\n  //Displays inputs for custom bet\r\n  const displayCustomSportsBet = () => {\r\n  console.log('custom bet button clicked')\r\n  // wipes the bet card clean\r\n  const betCard = document.querySelector('#predictorCard'); \r\n  betCard.innerHTML = '';\r\n\r\n  // Created input for bet type\r\n  const eventType = document.createElement('input');\r\n  eventType.setAttribute('type', 'text');\r\n  eventType.setAttribute('id', 'bet-type');\r\n  eventType.setAttribute('placeholder', 'What type of bet is this?(i.e sport type, entertainment, politics, etc.)');\r\n\r\n  // Created input for bet description\r\n  const betDescription = document.createElement('input');\r\n  betDescription.setAttribute('type', 'text');\r\n  betDescription.setAttribute('id', 'bet-description');\r\n  betDescription.setAttribute('placeholder', 'Describe what your bet is.');\r\n\r\n  // Created input for bet amount\r\n  const betAmount = document.createElement('input');\r\n  betAmount.setAttribute('type', 'number');\r\n  betAmount.setAttribute('id', 'bet-amount');\r\n  betAmount.setAttribute('step', '10.00');\r\n  betAmount.setAttribute('placeholder', 'Amount (e.g., 100 or 40.00)');\r\n\r\n  const betOdds = document.createElement('input');\r\n  betOdds.setAttribute('type', 'text');\r\n  betOdds.setAttribute('id', 'bet-odds');\r\n  betOdds.setAttribute('placeholder', 'Odds (e.g., +100, -120)');\r\n\r\n  // Created a date input for expiration date\r\n  const datePicker = document.createElement('input');\r\n  datePicker.setAttribute('type', 'date');\r\n  datePicker.setAttribute('id', 'date-picker');\r\n  datePicker.setAttribute('value', '2021-01-01');\r\n\r\n  // Created a submit button for the custom bets\r\n  let customBetSubmitButton = document.createElement('button');\r\n  customBetSubmitButton.textContent = 'Submit Custom Bet';\r\n  customBetSubmitButton.classList.add('customBetSubmitButton');\r\n  customBetSubmitButton.addEventListener('click', submitCustomSportsBet);\r\n  betCard.appendChild(eventType);\r\n  betCard.appendChild(betDescription);\r\n  betCard.appendChild(betAmount);\r\n  betCard.appendChild(betOdds);\r\n  betCard.appendChild(datePicker);\r\n  betCard.appendChild(customBetSubmitButton);\r\n  }\r\n  \r\n  //gets current odds for the selected sport\r\n  const getCurrentSportsOdds = () => {\r\n  var selectedSport = document.querySelector('#sportselector').value;\r\n  console.log (\"selected sport is\" + selectedSport);\r\n  console.log('current odds button clicked')\r\n  var oddsURL = `https://api.the-odds-api.com/v4/sports/${selectedSport}/odds?apiKey=${sportsAPIKey}&regions=us&markets=h2h%2Cspreads&dateFormat=iso&oddsFormat=american&bookmakers=bovada`;\r\n\r\n    fetch(oddsURL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        var oddsData = data;\r\n        console.log(oddsData);\r\n        displayCurrentSportsOdds(oddsData);\r\n      });\r\n  }\r\n\r\n  const displayCurrentSportsOdds = (oddsData) => {\r\n    console.log('current odds button clicked');\r\n    \r\n    const betCard = document.querySelector('#predictorCard');\r\n    betCard.innerHTML = '';\r\n  \r\n    const checkbox1 = document.createElement('input');\r\n    checkbox1.type = 'checkbox';\r\n    checkbox1.id = 'homeTeam';\r\n    checkbox1.value = 'home team';\r\n  \r\n    const label1 = document.createElement('label');\r\n    label1.htmlFor = 'homeTeam';\r\n    label1.textContent = 'Home Team';\r\n  \r\n    const checkbox2 = document.createElement('input');\r\n    checkbox2.type = 'checkbox';\r\n    checkbox2.id = 'awayTeam';\r\n    checkbox2.value = 'away team';\r\n  \r\n    const label2 = document.createElement('label');\r\n    label2.htmlFor = 'awayTeam';\r\n    label2.textContent = 'Away Team';\r\n  \r\n    const expirationDate = document.createElement('input');\r\n    expirationDate.setAttribute('type', 'date');\r\n    expirationDate.setAttribute('id', 'date-picker');\r\n    expirationDate.setAttribute('value', '2021-01-01');\r\n  \r\n    const createdBetSubmitButton = document.createElement('button');\r\n    createdBetSubmitButton.textContent = 'Submit Custom Bet';\r\n    createdBetSubmitButton.classList.add('customBetSubmitButton');\r\n    createdBetSubmitButton.addEventListener('click', submitCreatedSportsBet);\r\n  \r\n    const wagerAmount = document.createElement('input');\r\n    wagerAmount.setAttribute('type', 'number');\r\n    wagerAmount.setAttribute('id', 'bet-amount');\r\n    wagerAmount.setAttribute('step', '10.00');\r\n    wagerAmount.setAttribute('placeholder', 'Amount (e.g., 100 or 40.00)');\r\n  \r\n    betCard.appendChild(checkbox1);\r\n    betCard.appendChild(label1);\r\n    betCard.appendChild(checkbox2);\r\n    betCard.appendChild(label2);\r\n    betCard.appendChild(wagerAmount);\r\n    betCard.appendChild(expirationDate);\r\n    betCard.appendChild(createdBetSubmitButton);\r\n  \r\n    let oddsSelector = document.createElement('select');\r\n    oddsSelector.setAttribute('id', 'odds-selector');\r\n    oddsSelector.addEventListener('change', () => {\r\n      const selectedBet = oddsSelector.value;\r\n      console.log('Selected league value:', selectedBet);\r\n    });\r\n    \r\n    for (let i = 0; i < oddsData.length; i++) { \r\n      let oddsOption = document.createElement('option');\r\n      oddsOption.textContent = `${oddsData[i].home_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[0].price}, ${oddsData[i].away_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[1].price}`;\r\n      oddsSelector.appendChild(oddsOption);\r\n    }\r\n    \r\n    betCard.appendChild(oddsSelector);\r\n  }\r\n  \r\n  const createOddsSelector = (oddsData) => {\r\n    const oddsSelector = document.createElement('select');\r\n    oddsSelector.id = 'odds-selector';\r\n    oddsSelector.addEventListener('change', () => {\r\n      const selectedBet = oddsSelector.value;\r\n      console.log('Selected league value:', selectedBet);\r\n    });\r\n  \r\n    for (let i = 0; i < sportsLeagues.length; i++) { \r\n      const oddsOption = document.createElement('option');\r\n      const homeTeamOdds = oddsData[i].bookmakers[0].markets[0].outcomes[0].price;\r\n      const awayTeamOdds = oddsData[i].bookmakers[0].markets[0].outcomes[1].price;\r\n      oddsOption.textContent = `${oddsData[i].home_team}: ${homeTeamOdds}, ${oddsData[i].away_team}: ${awayTeamOdds}`;\r\n      oddsSelector.appendChild(oddsOption);\r\n    }\r\n  \r\n    return oddsSelector;\r\n  }\r\n\r\n  //submits custom bet\r\n  const submitCustomSportsBet = () => {\r\n    console.log('custom bet button clicked') \r\n  }\r\n\r\n  //submits bet\r\n  const submitCreatedSportsBet = () => {\r\n    console.log('submit bet button clicked')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <select id=\"betselector\" onChange={handleBetSelectorChange}>\r\n        <option value=\"\">Select Bet Type</option>\r\n        <option value=\"Sports\">Sports</option>\r\n        <option value=\"Finance\">Finance</option>\r\n      </select>\r\n      <div id=\"infoBoard\"></div>\r\n      <div id=\"predictorCard\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SportsBetting;","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\utils\\auth.js",["69"],[],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/profile');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","C:\\Users\\Daniel Gregoire\\Desktop\\ucf-bootcamp\\perfect-parlay\\client\\src\\utils\\mutations.js",[],[],{"ruleId":"70","severity":1,"message":"71","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":33},{"ruleId":"70","severity":1,"message":"74","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":23},{"ruleId":"70","severity":1,"message":"75","line":8,"column":25,"nodeType":"72","messageId":"73","endLine":8,"endColumn":41},{"ruleId":"70","severity":1,"message":"76","line":365,"column":9,"nodeType":"72","messageId":"73","endLine":365,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":39,"column":1,"nodeType":"79","endLine":39,"endColumn":34},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'selectedValue' is assigned a value but never used.","'setSportsLeagues' is assigned a value but never used.","'createOddsSelector' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]
=======
[{"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/index.js":"1","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/reportWebVitals.js":"2","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/App.js":"3","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/mutations.js":"4","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/auth.js":"5","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Home.js":"6","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Signup.js":"7","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Contact.js":"8","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Login.js":"9","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/components/Navbar.js":"10","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Profile.js":"11","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/queries.js":"12","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Sports.js":"13"},{"size":419,"mtime":1679867790190,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1679615759864,"results":"16","hashOfConfig":"15"},{"size":1553,"mtime":1679952730303,"results":"17","hashOfConfig":"15"},{"size":1475,"mtime":1679867790193,"results":"18","hashOfConfig":"15"},{"size":751,"mtime":1679935367947,"results":"19","hashOfConfig":"15"},{"size":716,"mtime":1679957631209,"results":"20","hashOfConfig":"15"},{"size":2695,"mtime":1679957041674,"results":"21","hashOfConfig":"15"},{"size":2113,"mtime":1679957239023,"results":"22","hashOfConfig":"15"},{"size":2628,"mtime":1679960123240,"results":"23","hashOfConfig":"15"},{"size":603,"mtime":1679873482075,"results":"24","hashOfConfig":"15"},{"size":3920,"mtime":1679947695273,"results":"25","hashOfConfig":"15"},{"size":534,"mtime":1679867790193,"results":"26","hashOfConfig":"15"},{"size":14759,"mtime":1679955482349,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1u2yiy4",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/index.js",[],[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/reportWebVitals.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/App.js",["71"],[],"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, createHttpLink, ApolloProvider } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Contact from './pages/Contact';\nimport Navbar from './components/Navbar';\nimport Profile from './pages/Profile';\nimport Sports from './pages/Sports';\n// import PredictorPicker from './pages/PredictorPicker';\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <>\n      <Navbar />\n          <Routes>\n              <Route exact path='/' element={<Home />} />\n              <Route path='/signup' element={<Signup />} />\n              <Route path='/login' element={<Login />} />\n              <Route path='/contact' element={<Contact />} />\n              <Route path='/profile' element={<Profile />} />\n              <Route path='/sports' element={<Sports />} />\n          </Routes>\n      </>\n    </ApolloProvider>\n  )\n}\n\nexport default App;\n","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/mutations.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/auth.js",["72"],[],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/profile');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Home.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Signup.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Contact.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Login.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/components/Navbar.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Profile.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/utils/queries.js",[],[],"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Sports.js",["73","74","75"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SportsBetting = () => {\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const sportsAPIKey = \"8b80cb19e317c4b97ba6b368e1d88304\";\n  const navigate = useNavigate();\n  const [sportsLeagues, setSportsLeagues] = useState([\n    {\n      name: \"Select a League and select a type of bet to see the odds and scores!\",\n      id: \"sample choice\",\n      value: \"sample choice\",\n    },\n    {\n      name: \"American Football (NFL)\",\n      id: \"americanfootball_nfl\",\n      value: \"americanfootball_nfl\",\n    },\n    \n    {\n      name: 'Select a League and select a type of bet to see the odds and scores!',\n      id: 'sample choice',\n      value: 'sample choice'\n    },\n    {\n      name: 'American Football (NFL)',\n      id: 'americanfootball_nfl',\n      value: 'americanfootball_nfl'\n    },\n    {\n      name: 'American Football (NCAA)',\n      id: 'americanfootball_ncaaf',\n      value: 'americanfootball_ncaaf'\n    },\n    {\n      name: 'Aussie Rules Football (AFL)',\n      id: 'aussierules_afl',\n      value: 'aussierules_afl'\n    },\n    {\n      name: 'Baseball (MLB)',\n      id: 'baseball_mlb',\n      value: 'baseball_mlb'\n    },\n    {\n      name: 'Basketball (NBA)',\n      id: 'basketball_nba',\n      value: 'basketball_nba'\n    },\n    {\n      name: 'National Hockey League (NHL)',\n      id: 'icehockey_nhl',\n      value: 'icehockey_nhl'\n    },\n    {\n      name: 'Mixed Martial Arts (MMA)',\n      id: 'mma_mixed_martial_arts',\n      value: 'mma_mixed_martial_arts'\n    },\n    {\n      name: 'Soccer (Premier League)',\n      id: 'soccer_epl',\n      value: 'soccer_epl'\n    },\n    {\n      name: 'Soccer (La Liga)',\n      id: 'soccer_spain_la_liga',\n      value: 'soccer_spain_la_liga'\n    },\n    {\n      name: 'Soccer (MLS)',\n      id: 'soccer_usa_mls',\n      value: 'soccer_usa_mls'\n    },\n    {\n      name: 'Soccer (UEFA Champions League)',\n      id: 'soccer_uefa_champs_league',\n      value: 'soccer_uefa_champs_league'\n    }\n  ]);\n\n  const handleBetSelectorChange = (event) => {\n    const selectedValue = event.target.value;\n    setSelectedValue(selectedValue);\n    console.log(selectedValue);\n    if (selectedValue === \"Sports\") {\n      console.log(\"sports chosen\");\n      nbaScoresInfoBoard();\n      displaySportsBetCard();\n    } else if (selectedValue === \"Finance\") {\n      console.log(\"finance chosen\");\n      const profileButton = document.createElement(\"button\");\n      profileButton.textContent = \"Go to Finance Profile\";\n      profileButton.classList.add(\"profileButton\");\n      profileButton.addEventListener(\"click\", () => {\n        navigate(\"/profile\");\n      });\n      const betCard = document.querySelector(\"#predictorCard\");\n      betCard.innerHTML = \"\";\n      betCard.appendChild(profileButton);\n    }\n  };\n  \n\n  const nbaScoresInfoBoard = () => {\n    const nbascoresURL = `https://api.the-odds-api.com/v4/sports/basketball_nba/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n\n    fetch(nbascoresURL)\n  .then((response) => response.json())\n  .then((data) => {\n    console.log(data);\n    const sampleScores = data;\n    console.log(sampleScores);\n    starterSportsDisplay(sampleScores);\n    return sampleScores;\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n  };\n\n  const starterSportsDisplay = (sampleScores) => {\n    let scoresContainer = document.querySelector(\"#infoBoard\");\n    if (!sampleScores || sampleScores.length === 0) {\n      scoresContainer.textContent = \"No scores found.\";\n      return;\n    }\n    for (let i = 0; i < sampleScores.length; i++) {\n      let pastScore = document.createElement(\"div\");\n      pastScore.classList.add(\"card-item\");\n      let scores = document.createElement(\"p\");\n      scores.textContent = `${sampleScores[i].scores[0].name}: ${sampleScores[i].scores[0].score}, ${sampleScores[i].scores[1].name}: ${sampleScores[i].scores[1].score}`;\n      let teamsBanner = document.createElement(\"h3\");\n      teamsBanner.textContent = `${sampleScores[i].home_team} vs. ${sampleScores[i].away_team}`;\n  \n      pastScore.appendChild(teamsBanner);\n      pastScore.appendChild(scores);\n      scoresContainer.append(pastScore);\n    }\n  };\n\n\n  //Displays card to choose sport to bet on/if they want a rgular or custom bet\n  const displaySportsBetCard = () => {\n    const betCard = document.querySelector('#predictorCard'); \n    betCard.innerHTML = '';\n\n    // Create a label for the date input\n    const label = document.createElement('label');\n    label.textContent = 'Choose a date: ';\n    // Created a date input\n    const datePicker = document.createElement('input');\n    datePicker.setAttribute('type', 'date');\n    datePicker.setAttribute('id', 'date-picker');\n    datePicker.setAttribute('value', '2021-01-01');\n    // Created dropdown for the sports(Leagues)\n    let sportsSelector = document.createElement('select');\n    sportsSelector.setAttribute('id', 'sportselector');\n    sportsSelector.addEventListener('change', () => {\n      const selectedValue = sportsSelector.value;\n      console.log('Selected league value:', selectedValue);\n      updatedapiInfo(selectedValue);\n    });\n    // Created a button for the custom bets\n    let customBetButton = document.createElement('button');\n    customBetButton.textContent = 'Create Custom Bet';\n    customBetButton.classList.add('customBetButton');\n    customBetButton.addEventListener('click', () => {\n      displayCustomSportsBet();\n      console.log('custom bet button clicked')\n    });\n    // Created a button for the current odds\n    let currentOddsButton = document.createElement('button');\n    currentOddsButton.textContent = 'Current Odds';\n    currentOddsButton.classList.add('currentOddsButton');\n    currentOddsButton.addEventListener('click', getCurrentSportsOdds);\n  \n    // Created the options for the sports(Leagues)\n    sportsSelector.setAttribute('id', 'sportselector');\n    for (var i = 0; i < sportsLeagues.length; i++) { \n      let sportsOption = document.createElement('option');\n      sportsOption.setAttribute('value', sportsLeagues[i].id);\n      sportsOption.textContent = sportsLeagues[i].name;\n      sportsSelector.appendChild(sportsOption);\n      betCard.appendChild(sportsSelector);\n    }\n    betCard.appendChild(label);\n    betCard.appendChild(datePicker);\n    betCard.appendChild(customBetButton);\n    betCard.appendChild(currentOddsButton);\n    betCard.appendChild(sportsSelector);\n  }\n\n  //pulls info for updated scores for the selected sport\n  const updatedapiInfo = (selectedValue) => {\n    var updatedSport = selectedValue;\n    console.log(updatedSport);\n    if (updatedSport === 'sample choice') {\n      console.log('no sport chosen');\n    } else {\n      console.log(updatedSport + ' chosen');\n      var newscoresURL = `https://api.the-odds-api.com/v4/sports/${updatedSport}/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n      fetch(newscoresURL)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          var updatedScores = data;\n          console.log(updatedScores);\n          updatedOddsDisplay(updatedScores);\n          getCurrentSportsOdds(updatedScores);\n        });\n    }\n  }\n\n  //Displays updated scores for the selected sport\n  const updatedOddsDisplay = (updatedScores) => {\n    let updatedScoresContainer = document.querySelector('#infoBoard');\n    updatedScoresContainer.innerHTML = '';\n  \n    for (var i = 0; i < updatedScores.length; i++) {\n      let updatedScore = document.createElement('div');\n      updatedScore.classList.add('card-item');\n      let newScores = document.createElement('p');\n      newScores.textContent = `${updatedScores[i].scores[0].name}: ${updatedScores[i].scores[0].score}, ${updatedScores[i].scores[1].name}: ${updatedScores[i].scores[1].score}`;\n      let updatedTeamsBanner = document.createElement('h3');\n      updatedTeamsBanner.textContent = `${updatedScores[i].home_team} vs. ${updatedScores[i].away_team}`;\n\n      updatedScore.appendChild(updatedTeamsBanner);\n      updatedScore.appendChild(newScores);\n      updatedScoresContainer.append(updatedScore);\n    }\n  }\n  \n  //Displays inputs for custom bet\n  const displayCustomSportsBet = () => {\n  console.log('custom bet button clicked')\n  // wipes the bet card clean\n  const betCard = document.querySelector('#predictorCard'); \n  betCard.innerHTML = '';\n\n  // Created input for bet type\n  const eventType = document.createElement('input');\n  eventType.setAttribute('type', 'text');\n  eventType.setAttribute('id', 'bet-type');\n  eventType.setAttribute('placeholder', 'What type of bet is this?(i.e sport type, entertainment, politics, etc.)');\n\n  // Created input for bet description\n  const betDescription = document.createElement('input');\n  betDescription.setAttribute('type', 'text');\n  betDescription.setAttribute('id', 'bet-description');\n  betDescription.setAttribute('placeholder', 'Describe what your bet is.');\n\n  // Created input for bet amount\n  const betAmount = document.createElement('input');\n  betAmount.setAttribute('type', 'number');\n  betAmount.setAttribute('id', 'bet-amount');\n  betAmount.setAttribute('step', '10.00');\n  betAmount.setAttribute('placeholder', 'Amount (e.g., 100 or 40.00)');\n\n  const betOdds = document.createElement('input');\n  betOdds.setAttribute('type', 'text');\n  betOdds.setAttribute('id', 'bet-odds');\n  betOdds.setAttribute('placeholder', 'Odds (e.g., +100, -120)');\n\n  // Created a date input for expiration date\n  const datePicker = document.createElement('input');\n  datePicker.setAttribute('type', 'date');\n  datePicker.setAttribute('id', 'date-picker');\n  datePicker.setAttribute('value', '2021-01-01');\n\n  // Created a submit button for the custom bets\n  let customBetSubmitButton = document.createElement('button');\n  customBetSubmitButton.textContent = 'Submit Custom Bet';\n  customBetSubmitButton.classList.add('customBetSubmitButton');\n  customBetSubmitButton.addEventListener('click', submitCustomSportsBet);\n  betCard.appendChild(eventType);\n  betCard.appendChild(betDescription);\n  betCard.appendChild(betAmount);\n  betCard.appendChild(betOdds);\n  betCard.appendChild(datePicker);\n  betCard.appendChild(customBetSubmitButton);\n  }\n  \n  //gets current odds for the selected sport\n  const getCurrentSportsOdds = () => {\n  var selectedSport = document.querySelector('#sportselector').value;\n  console.log (\"selected sport is\" + selectedSport);\n  console.log('current odds button clicked')\n  var oddsURL = `https://api.the-odds-api.com/v4/sports/${selectedSport}/odds?apiKey=${sportsAPIKey}&regions=us&markets=h2h%2Cspreads&dateFormat=iso&oddsFormat=american&bookmakers=bovada`;\n\n    fetch(oddsURL)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        var oddsData = data;\n        console.log(oddsData);\n        displayCurrentSportsOdds(oddsData);\n      });\n  }\n\n  const displayCurrentSportsOdds = (oddsData) => {\n    console.log('current odds button clicked');\n    \n    const betCard = document.querySelector('#predictorCard');\n    betCard.innerHTML = '';\n  \n    const checkbox1 = document.createElement('input');\n    checkbox1.type = 'checkbox';\n    checkbox1.id = 'homeTeam';\n    checkbox1.value = 'home team';\n  \n    const label1 = document.createElement('label');\n    label1.htmlFor = 'homeTeam';\n    label1.textContent = 'Home Team';\n  \n    const checkbox2 = document.createElement('input');\n    checkbox2.type = 'checkbox';\n    checkbox2.id = 'awayTeam';\n    checkbox2.value = 'away team';\n  \n    const label2 = document.createElement('label');\n    label2.htmlFor = 'awayTeam';\n    label2.textContent = 'Away Team';\n  \n    const expirationDate = document.createElement('input');\n    expirationDate.setAttribute('type', 'date');\n    expirationDate.setAttribute('id', 'date-picker');\n    expirationDate.setAttribute('value', '2021-01-01');\n  \n    const createdBetSubmitButton = document.createElement('button');\n    createdBetSubmitButton.textContent = 'Submit Custom Bet';\n    createdBetSubmitButton.classList.add('customBetSubmitButton');\n    createdBetSubmitButton.addEventListener('click', submitCreatedSportsBet);\n  \n    const wagerAmount = document.createElement('input');\n    wagerAmount.setAttribute('type', 'number');\n    wagerAmount.setAttribute('id', 'bet-amount');\n    wagerAmount.setAttribute('step', '10.00');\n    wagerAmount.setAttribute('placeholder', 'Amount (e.g., 100 or 40.00)');\n  \n    betCard.appendChild(checkbox1);\n    betCard.appendChild(label1);\n    betCard.appendChild(checkbox2);\n    betCard.appendChild(label2);\n    betCard.appendChild(wagerAmount);\n    betCard.appendChild(expirationDate);\n    betCard.appendChild(createdBetSubmitButton);\n  \n    let oddsSelector = document.createElement('select');\n    oddsSelector.setAttribute('id', 'odds-selector');\n    oddsSelector.addEventListener('change', () => {\n      const selectedBet = oddsSelector.value;\n      console.log('Selected league value:', selectedBet);\n    });\n    \n    for (let i = 0; i < oddsData.length; i++) { \n      let oddsOption = document.createElement('option');\n      oddsOption.textContent = `${oddsData[i].home_team}: ${oddsData[i].bookmakers[i].markets[0].outcomes[0].price}, ${oddsData[i].away_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[1].price}`;\n      oddsSelector.appendChild(oddsOption);\n      console.log(oddsOption)\n    }\n    \n    betCard.appendChild(oddsSelector);\n  }\n  \n  const createOddsSelector = (oddsData) => {\n    const oddsSelector = document.createElement('select');\n    oddsSelector.id = 'odds-selector';\n    oddsSelector.addEventListener('change', () => {\n      const selectedBet = oddsSelector.value;\n      console.log('Selected league value:', selectedBet);\n    });\n  \n    for (let i = 0; i < sportsLeagues.length; i++) { \n      const oddsOption = document.createElement('option');\n      const homeTeamOdds = oddsData[i].bookmakers[0].markets[0].outcomes[0].price;\n      const awayTeamOdds = oddsData[i].bookmakers[0].markets[0].outcomes[1].price;\n      oddsOption.textContent = `${oddsData[i].home_team}: ${homeTeamOdds}, ${oddsData[i].away_team}: ${awayTeamOdds}`;\n      oddsSelector.appendChild(oddsOption);\n    }\n  \n    return oddsSelector;\n  }\n\n  //submits custom bet\n  const submitCustomSportsBet = () => {\n    console.log('custom bet button clicked') \n  }\n\n  //submits bet\n  const submitCreatedSportsBet = () => {\n    console.log('submit bet button clicked')\n  }\n\n  return (\n    <div>\n      <select id=\"betselector\" onChange={handleBetSelectorChange}>\n        <option value=\"\">Select Bet Type</option>\n        <option value=\"Sports\">Sports</option>\n        <option value=\"Finance\">Finance</option>\n      </select>\n      <div id=\"infoBoard\"></div>\n      <div id=\"predictorCard\"></div>\n    </div>\n  );\n};\n\nexport default SportsBetting;",{"ruleId":"76","severity":1,"message":"77","line":2,"column":27,"nodeType":"78","messageId":"79","endLine":2,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":39,"column":1,"nodeType":"82","endLine":39,"endColumn":34},{"ruleId":"76","severity":1,"message":"83","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":23},{"ruleId":"76","severity":1,"message":"84","line":8,"column":25,"nodeType":"78","messageId":"79","endLine":8,"endColumn":41},{"ruleId":"76","severity":1,"message":"85","line":366,"column":9,"nodeType":"78","messageId":"79","endLine":366,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'selectedValue' is assigned a value but never used.","'setSportsLeagues' is assigned a value but never used.","'createOddsSelector' is assigned a value but never used."]
>>>>>>> 77e421c01bd9d721addebdb769f56f0e41c49df9
