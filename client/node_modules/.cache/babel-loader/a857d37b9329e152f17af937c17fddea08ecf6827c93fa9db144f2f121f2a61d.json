{"ast":null,"code":"var _jsxFileName = \"/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Sports.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SportsBetting = () => {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const sportsAPIKey = \"8b80cb19e317c4b97ba6b368e1d88304\";\n  const sportsLeagues = [{\n    name: \"Select a League and select a type of bet to see the odds and scores!\",\n    id: \"sample choice\",\n    value: \"sample choice\"\n  }, {\n    name: \"American Football (NFL)\",\n    id: \"americanfootball_nfl\",\n    value: \"americanfootball_nfl\"\n  }, {\n    name: 'Select a League and select a type of bet to see the odds and scores!',\n    id: 'sample choice',\n    value: 'sample choice'\n  }, {\n    name: 'American Football (NFL)',\n    id: 'americanfootball_nfl',\n    value: 'americanfootball_nfl'\n  }, {\n    name: 'American Football (NCAA)',\n    id: 'americanfootball_ncaaf',\n    value: 'americanfootball_ncaaf'\n  }, {\n    name: 'Aussie Rules Football (AFL)',\n    id: 'aussierules_afl',\n    value: 'aussierules_afl'\n  }, {\n    name: 'Baseball (MLB)',\n    id: 'baseball_mlb',\n    value: 'baseball_mlb'\n  }, {\n    name: 'Basketball (NBA)',\n    id: 'basketball_nba',\n    value: 'basketball_nba'\n  }, {\n    name: 'National Hockey League (NHL)',\n    id: 'icehockey_nhl',\n    value: 'icehockey_nhl'\n  }, {\n    name: 'Mixed Martial Arts (MMA)',\n    id: 'mma_mixed_martial_arts',\n    value: 'mma_mixed_martial_arts'\n  }, {\n    name: 'Soccer (Premier League)',\n    id: 'soccer_epl',\n    value: 'soccer_epl'\n  }, {\n    name: 'Soccer (La Liga)',\n    id: 'soccer_spain_la_liga',\n    value: 'soccer_spain_la_liga'\n  }, {\n    name: 'Soccer (MLS)',\n    id: 'soccer_usa_mls',\n    value: 'soccer_usa_mls'\n  }, {\n    name: 'Soccer (UEFA Champions League)',\n    id: 'soccer_uefa_champs_league',\n    value: 'soccer_uefa_champs_league'\n  }];\n  const handleBetSelectorChange = event => {\n    const selectedValue = event.target.value;\n    setSelectedValue(selectedValue);\n    console.log(selectedValue);\n    if (selectedValue === \"Sports\") {\n      console.log(\"sports chosen\");\n      nbaScoresInfoBoard();\n      displaySportsBetCard();\n    } else if (selectedValue === \"Finance\") {\n      console.log(\"finance chosen\");\n      const profileButton = document.createElement(\"button\");\n      profileButton.textContent = \"Go to Finance Profile\";\n      profileButton.classList.add(\"profileButton\");\n      profileButton.addEventListener(\"click\", () => {\n        window.location.href = \"/profile\";\n      });\n      const betCard = document.querySelector(\"#predictorCard\");\n      betCard.innerHTML = \"\";\n      betCard.appendChild(profileButton);\n    }\n  };\n  const nbaScoresInfoBoard = () => {\n    const nbascoresURL = `https://api.the-odds-api.com/v4/sports/basketball_nba/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n    fetch(nbascoresURL).then(response => response.json()).then(data => {\n      console.log(data);\n      const sampleScores = data;\n      console.log(sampleScores);\n      starterSportsDisplay(sampleScores);\n    });\n  };\n  const starterSportsDisplay = sampleScores => {\n    let scoresContainer = document.querySelector(\".resultsDiv\");\n    for (let i = 0; i < sampleScores.length; i++) {\n      let pastScore = document.createElement(\"div\");\n      pastScore.classList.add(\"card-item\");\n      let scores = document.createElement(\"p\");\n      scores.textContent = `${sampleScores[i].scores[0].name}: ${sampleScores[i].scores[0].score}, ${sampleScores[i].scores[1].name}: ${sampleScores[i].scores[1].score}`;\n      let teamsBanner = document.createElement(\"h3\");\n      teamsBanner.textContent = `${sampleScores[i].home_team} vs. ${sampleScores[i].away_team}`;\n      pastScore.appendChild(teamsBanner);\n      pastScore.appendChild(scores);\n      scoresContainer.append(pastScore);\n    }\n  };\n\n  //Displays card to choose sport to bet on/if they want a rgular or custom bet\n  const displaySportsBetCard = () => {\n    const betCard = document.querySelector('#predictorCard');\n    betCard.innerHTML = '';\n\n    // Create a label for the date input\n    const label = document.createElement('label');\n    label.textContent = 'Choose a date: ';\n    // Created a date input\n    const datePicker = document.createElement('input');\n    datePicker.setAttribute('type', 'date');\n    datePicker.setAttribute('id', 'date-picker');\n    datePicker.setAttribute('value', '2021-01-01');\n    // Created dropdown for the sports(Leagues)\n    let sportsSelector = document.createElement('select');\n    sportsSelector.setAttribute('id', 'sportselector');\n    sportsSelector.addEventListener('change', () => {\n      const selectedValue = sportsSelector.value;\n      console.log('Selected league value:', selectedValue);\n      updatedApiInfo(selectedValue);\n    });\n    // Created a button for the current odds\n    let currentOddsButton = document.createElement('button');\n    currentOddsButton.textContent = 'Current Odds';\n    currentOddsButton.classList.add('currentOddsButton');\n    currentOddsButton.addEventListener('click', getCurrentSportsOdds);\n\n    // Created the options for the sports(Leagues)\n    sportsSelector.setAttribute('id', 'sportselector');\n    for (var i = 0; i < sportsLeagues.length; i++) {\n      let sportsOption = document.createElement('option');\n      sportsOption.setAttribute('value', sportsLeagues[i].id);\n      sportsOption.textContent = sportsLeagues[i].name;\n      sportsSelector.appendChild(sportsOption);\n      betCard.appendChild(sportsSelector);\n    }\n    betCard.appendChild(label);\n    betCard.appendChild(datePicker);\n    betCard.appendChild(currentOddsButton);\n    betCard.appendChild(sportsSelector);\n  };\n\n  //pulls info for updated scores for the selected sport\n  const updatedApiInfo = selectedValue => {\n    var updatedSport = selectedValue;\n    console.log(updatedSport);\n    if (updatedSport === 'sample choice') {\n      console.log('no sport chosen');\n    } else {\n      console.log(updatedSport + ' chosen');\n      var newscoresURL = `https://api.the-odds-api.com/v4/sports/${updatedSport}/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n      fetch(newscoresURL).then(response => response.json()).then(data => {\n        console.log(data);\n        var updatedScores = data;\n        console.log(updatedScores);\n        updatedOddsDisplay(updatedScores);\n        getCurrentSportsOdds(updatedScores);\n      });\n    }\n  };\n\n  //Displays updated scores for the selected sport\n  const updatedOddsDisplay = updatedScores => {\n    let updatedScoresContainer = document.querySelector('.resultsDiv');\n    updatedScoresContainer.innerHTML = '';\n    for (var i = 0; i < updatedScores.length; i++) {\n      let updatedScore = document.createElement('div');\n      updatedScore.classList.add('card-item');\n      let newScores = document.createElement('p');\n      newScores.textContent = `${updatedScores[i].scores[0].name}: ${updatedScores[i].scores[0].score}, ${updatedScores[i].scores[1].name}: ${updatedScores[i].scores[1].score}`;\n      let updatedTeamsBanner = document.createElement('h3');\n      updatedTeamsBanner.textContent = `${updatedScores[i].home_team} vs. ${updatedScores[i].away_team}`;\n      updatedScore.appendChild(updatedTeamsBanner);\n      updatedScore.appendChild(newScores);\n      updatedScoresContainer.append(updatedScore);\n    }\n  };\n\n  //gets current odds for the selected sport\n  const getCurrentSportsOdds = () => {\n    var selectedSport = document.querySelector('#sportselector').value;\n    console.log(\"selected sport is\" + selectedSport);\n    console.log('current odds button clicked');\n    var oddsURL = `https://api.the-odds-api.com/v4/sports/${selectedSport}/odds?apiKey=${sportsAPIKey}&regions=us&markets=h2h%2Cspreads&dateFormat=iso&oddsFormat=american&bookmakers=bovada`;\n    fetch(oddsURL).then(response => response.json()).then(data => {\n      console.log(data);\n      var oddsData = data;\n      console.log(oddsData);\n      displayCurrentSportsOdds(oddsData);\n    });\n  };\n  const displayCurrentSportsOdds = oddsData => {\n    console.log('current odds button clicked');\n    // wipes the bet card clean\n    const betCard = document.querySelector('#predictorCard');\n    betCard.innerHTML = '';\n\n    // chackboxes for odds\n    const checkbox1 = document.createElement('input');\n    checkbox1.type = 'checkbox';\n    checkbox1.id = 'homeTeam';\n    checkbox1.value = 'home team';\n    const label1 = document.createElement('label');\n    label1.htmlFor = 'checkbox1';\n    label1.textContent = 'Home Team';\n    const checkbox2 = document.createElement('input');\n    checkbox2.type = 'checkbox';\n    checkbox2.id = 'awayTeam';\n    checkbox2.value = 'away team';\n    const label2 = document.createElement('label');\n    label2.htmlFor = 'checkbox2';\n    label2.textContent = 'Away Team';\n\n    //appending\n    betCard.appendChild(checkbox1);\n    betCard.appendChild(label1);\n    betCard.appendChild(checkbox2);\n    betCard.appendChild(label2);\n    // options for odds(value is the odds)\n    let oddsSelector = document.createElement('select');\n    oddsSelector.setAttribute('id', 'odds-selector');\n    oddsSelector.addEventListener('change', () => {\n      const selectedBet = oddsSelector.value;\n      console.log('Selected league value:', selectedBet);\n    });\n    for (var i = 0; i < sportsLeagues.length; i++) {\n      let oddsOption = document.createElement('option');\n      oddsOption.textContent = `${oddsData[i].home_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[0].price}, ${oddsData[i].away_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[1].price}`;\n      oddsSelector.appendChild(oddsOption);\n      betCard.appendChild(oddsSelector);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sports-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"betselector\",\n        onChange: handleBetSelectorChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Bet Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sports\",\n          children: \"Sports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finance\",\n          children: \"Finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resultsDiv\",\n      children: displayCurrentSportsOdds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(SportsBetting, \"3549XmxMMOyg6yW+rzOI1hhPUfs=\");\n_c = SportsBetting;\nexport default SportsBetting;\nvar _c;\n$RefreshReg$(_c, \"SportsBetting\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SportsBetting","_s","selectedValue","setSelectedValue","sportsAPIKey","sportsLeagues","name","id","value","handleBetSelectorChange","event","target","console","log","nbaScoresInfoBoard","displaySportsBetCard","profileButton","document","createElement","textContent","classList","add","addEventListener","window","location","href","betCard","querySelector","innerHTML","appendChild","nbascoresURL","fetch","then","response","json","data","sampleScores","starterSportsDisplay","scoresContainer","i","length","pastScore","scores","score","teamsBanner","home_team","away_team","append","label","datePicker","setAttribute","sportsSelector","updatedApiInfo","currentOddsButton","getCurrentSportsOdds","sportsOption","updatedSport","newscoresURL","updatedScores","updatedOddsDisplay","updatedScoresContainer","updatedScore","newScores","updatedTeamsBanner","selectedSport","oddsURL","oddsData","displayCurrentSportsOdds","checkbox1","type","label1","htmlFor","checkbox2","label2","oddsSelector","selectedBet","oddsOption","bookmakers","markets","outcomes","price","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kenjifleming/course-challenges/Perfect-Parlay/perfect-parlay/client/src/pages/Sports.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n\nconst SportsBetting = () => {\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const sportsAPIKey = \"8b80cb19e317c4b97ba6b368e1d88304\";\n  const sportsLeagues = [\n    {\n      name: \"Select a League and select a type of bet to see the odds and scores!\",\n      id: \"sample choice\",\n      value: \"sample choice\",\n    },\n    {\n      name: \"American Football (NFL)\",\n      id: \"americanfootball_nfl\",\n      value: \"americanfootball_nfl\",\n    },\n    \n    {\n      name: 'Select a League and select a type of bet to see the odds and scores!',\n      id: 'sample choice',\n      value: 'sample choice'\n    },\n    {\n      name: 'American Football (NFL)',\n      id: 'americanfootball_nfl',\n      value: 'americanfootball_nfl'\n    },\n    {\n      name: 'American Football (NCAA)',\n      id: 'americanfootball_ncaaf',\n      value: 'americanfootball_ncaaf'\n    },\n    {\n      name: 'Aussie Rules Football (AFL)',\n      id: 'aussierules_afl',\n      value: 'aussierules_afl'\n    },\n    {\n      name: 'Baseball (MLB)',\n      id: 'baseball_mlb',\n      value: 'baseball_mlb'\n    },\n    {\n      name: 'Basketball (NBA)',\n      id: 'basketball_nba',\n      value: 'basketball_nba'\n    },\n    {\n      name: 'National Hockey League (NHL)',\n      id: 'icehockey_nhl',\n      value: 'icehockey_nhl'\n    },\n    {\n      name: 'Mixed Martial Arts (MMA)',\n      id: 'mma_mixed_martial_arts',\n      value: 'mma_mixed_martial_arts'\n    },\n    {\n      name: 'Soccer (Premier League)',\n      id: 'soccer_epl',\n      value: 'soccer_epl'\n    },\n    {\n      name: 'Soccer (La Liga)',\n      id: 'soccer_spain_la_liga',\n      value: 'soccer_spain_la_liga'\n    },\n    {\n      name: 'Soccer (MLS)',\n      id: 'soccer_usa_mls',\n      value: 'soccer_usa_mls'\n    },\n    {\n      name: 'Soccer (UEFA Champions League)',\n      id: 'soccer_uefa_champs_league',\n      value: 'soccer_uefa_champs_league'\n    }\n  ];\n\n  const handleBetSelectorChange = (event) => {\n    const selectedValue = event.target.value;\n    setSelectedValue(selectedValue);\n    console.log(selectedValue);\n    if (selectedValue === \"Sports\") {\n      console.log(\"sports chosen\");\n      nbaScoresInfoBoard();\n      displaySportsBetCard();\n    } else if (selectedValue === \"Finance\") {\n      console.log(\"finance chosen\");\n      const profileButton = document.createElement(\"button\");\n      profileButton.textContent = \"Go to Finance Profile\";\n      profileButton.classList.add(\"profileButton\");\n      profileButton.addEventListener(\"click\", () => {\n        window.location.href = \"/profile\";\n      });\n      const betCard = document.querySelector(\"#predictorCard\");\n      betCard.innerHTML = \"\";\n      betCard.appendChild(profileButton);\n    }\n  };\n  \n\n  const nbaScoresInfoBoard = () => {\n    const nbascoresURL = `https://api.the-odds-api.com/v4/sports/basketball_nba/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n\n    fetch(nbascoresURL)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        const sampleScores = data;\n        console.log(sampleScores);\n        starterSportsDisplay(sampleScores);\n      });\n  };\n\n  const starterSportsDisplay = (sampleScores) => {\n    let scoresContainer = document.querySelector(\".resultsDiv\");\n\n    for (let i = 0; i < sampleScores.length; i++) {\n      let pastScore = document.createElement(\"div\");\n      pastScore.classList.add(\"card-item\");\n      let scores = document.createElement(\"p\");\n      scores.textContent = `${sampleScores[i].scores[0].name}: ${sampleScores[i].scores[0].score}, ${sampleScores[i].scores[1].name}: ${sampleScores[i].scores[1].score}`;\n      let teamsBanner = document.createElement(\"h3\");\n      teamsBanner.textContent = `${sampleScores[i].home_team} vs. ${sampleScores[i].away_team}`;\n\n      pastScore.appendChild(teamsBanner);\n      pastScore.appendChild(scores);\n      scoresContainer.append(pastScore);\n    }\n  };\n\n\n  //Displays card to choose sport to bet on/if they want a rgular or custom bet\n  const displaySportsBetCard = () => {\n    const betCard = document.querySelector('#predictorCard'); \n    betCard.innerHTML = '';\n\n    // Create a label for the date input\n    const label = document.createElement('label');\n    label.textContent = 'Choose a date: ';\n    // Created a date input\n    const datePicker = document.createElement('input');\n    datePicker.setAttribute('type', 'date');\n    datePicker.setAttribute('id', 'date-picker');\n    datePicker.setAttribute('value', '2021-01-01');\n    // Created dropdown for the sports(Leagues)\n    let sportsSelector = document.createElement('select');\n    sportsSelector.setAttribute('id', 'sportselector');\n    sportsSelector.addEventListener('change', () => {\n      const selectedValue = sportsSelector.value;\n      console.log('Selected league value:', selectedValue);\n      updatedApiInfo(selectedValue);\n    });\n    // Created a button for the current odds\n    let currentOddsButton = document.createElement('button');\n    currentOddsButton.textContent = 'Current Odds';\n    currentOddsButton.classList.add('currentOddsButton');\n    currentOddsButton.addEventListener('click', getCurrentSportsOdds);\n  \n    // Created the options for the sports(Leagues)\n    sportsSelector.setAttribute('id', 'sportselector');\n    for (var i = 0; i < sportsLeagues.length; i++) { \n      let sportsOption = document.createElement('option');\n      sportsOption.setAttribute('value', sportsLeagues[i].id);\n      sportsOption.textContent = sportsLeagues[i].name;\n      sportsSelector.appendChild(sportsOption);\n      betCard.appendChild(sportsSelector);\n    }\n    betCard.appendChild(label);\n    betCard.appendChild(datePicker);\n    betCard.appendChild(currentOddsButton);\n    betCard.appendChild(sportsSelector);\n  }\n\n  //pulls info for updated scores for the selected sport\n  const updatedApiInfo = (selectedValue) => {\n    var updatedSport = selectedValue;\n    console.log(updatedSport);\n    if (updatedSport === 'sample choice') {\n      console.log('no sport chosen');\n    } else {\n      console.log(updatedSport + ' chosen');\n      var newscoresURL = `https://api.the-odds-api.com/v4/sports/${updatedSport}/scores/?daysFrom=2&apiKey=${sportsAPIKey}`;\n      fetch(newscoresURL)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          var updatedScores = data;\n          console.log(updatedScores);\n          updatedOddsDisplay(updatedScores);\n          getCurrentSportsOdds(updatedScores);\n        });\n    }\n  }\n\n  //Displays updated scores for the selected sport\n  const updatedOddsDisplay = (updatedScores) => {\n    let updatedScoresContainer = document.querySelector('.resultsDiv');\n    updatedScoresContainer.innerHTML = '';\n  \n    for (var i = 0; i < updatedScores.length; i++) {\n      let updatedScore = document.createElement('div');\n      updatedScore.classList.add('card-item');\n      let newScores = document.createElement('p');\n      newScores.textContent = `${updatedScores[i].scores[0].name}: ${updatedScores[i].scores[0].score}, ${updatedScores[i].scores[1].name}: ${updatedScores[i].scores[1].score}`;\n      let updatedTeamsBanner = document.createElement('h3');\n      updatedTeamsBanner.textContent = `${updatedScores[i].home_team} vs. ${updatedScores[i].away_team}`;\n\n      updatedScore.appendChild(updatedTeamsBanner);\n      updatedScore.appendChild(newScores);\n      updatedScoresContainer.append(updatedScore);\n    }\n  }\n  \n  \n  //gets current odds for the selected sport\n  const getCurrentSportsOdds = () => {\n  var selectedSport = document.querySelector('#sportselector').value;\n  console.log (\"selected sport is\" + selectedSport);\n  console.log('current odds button clicked')\n  var oddsURL = `https://api.the-odds-api.com/v4/sports/${selectedSport}/odds?apiKey=${sportsAPIKey}&regions=us&markets=h2h%2Cspreads&dateFormat=iso&oddsFormat=american&bookmakers=bovada`;\n\n    fetch(oddsURL)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        var oddsData = data;\n        console.log(oddsData);\n        displayCurrentSportsOdds(oddsData);\n      });\n  }\n\n  const displayCurrentSportsOdds = (oddsData) => {\n  console.log('current odds button clicked')\n  // wipes the bet card clean\n  const betCard = document.querySelector('#predictorCard');\n  betCard.innerHTML = '';\n\n  // chackboxes for odds\n  const checkbox1 = document.createElement('input');\n  checkbox1.type = 'checkbox';\n  checkbox1.id = 'homeTeam';\n  checkbox1.value = 'home team';\n\n  const label1 = document.createElement('label');\n  label1.htmlFor = 'checkbox1';\n  label1.textContent = 'Home Team';\n\n  const checkbox2 = document.createElement('input');\n  checkbox2.type = 'checkbox';\n  checkbox2.id = 'awayTeam';\n  checkbox2.value = 'away team';\n\n  const label2 = document.createElement('label');\n  label2.htmlFor = 'checkbox2';\n  label2.textContent = 'Away Team';\n\n  //appending\n  betCard.appendChild(checkbox1);\n  betCard.appendChild(label1);\n  betCard.appendChild(checkbox2);\n  betCard.appendChild(label2);\n  // options for odds(value is the odds)\n  let oddsSelector = document.createElement('select');\n  oddsSelector.setAttribute('id', 'odds-selector');\n  oddsSelector.addEventListener('change', () => {\n    const selectedBet = oddsSelector.value;\n    console.log('Selected league value:', selectedBet);\n  });\n    for (var i = 0; i < sportsLeagues.length; i++) { \n    let oddsOption = document.createElement('option');\n    oddsOption.textContent = `${oddsData[i].home_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[0].price}, ${oddsData[i].away_team}: ${oddsData[i].bookmakers[0].markets[0].outcomes[1].price}`;\n    oddsSelector.appendChild(oddsOption);\n    betCard.appendChild(oddsSelector);\n    }\n  }\n\n\n  return (\n    <div className='sports-container'>\n  <div>\n    <select id=\"betselector\" onChange={handleBetSelectorChange}>\n      <option value=\"\">Select Bet Type</option>\n      <option value=\"Sports\">Sports</option>\n      <option value=\"Finance\">Finance</option>\n    </select>\n  </div>\n  <br />\n  <div id=\"resultsDiv\">\n    {displayCurrentSportsOdds}\n  </div>\n</div>\n\n  );\n};\n\nexport default SportsBetting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}